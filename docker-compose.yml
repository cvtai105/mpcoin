version: '3.8'

services:
  backend-services:
    build:
      context: ./
      dockerfile: ./_dockerfiles/backend-services.docker
    container_name: backend-services
    depends_on:
      kafka:
        condition: service_healthy
      postgre-db:
        condition: service_started
      redis:
        condition: service_started
    restart: on-failure:3
    environment:
      - DB_HOST=postgre-db
      - DB_PORT=5432
      - REDIS_HOST=redis:6379
      - REDIS_PASSWORD=password
      - REDIS_DB=0
      - CONN_STR=postgres://user:password@postgre-db:5432/mpcwallet?sslmode=disable
      - MAX_CONNECTIONS=10
      - BROKERS=kafka:29092
      - KAFKA_WALLET_CREATED_TOPIC=wallet-create
      - KAFKA_TRANSACTION_FOUND_TOPIC=transaction-found
      - ETHEREUM_URL=https://sepolia.infura.io/v3/6c89fb7fa351451f939eea9da6bee755
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=postgre-db user=user password=password dbname=mpcwallet port=5432 sslmode=disable TimeZone=UTC
      - ETHEREUM_SECRET_KEY=LEi6RTO6R5gIZqFBBtB79BGHC8BHziGW
      # - ETHEREUM_SECRET_KEY=${ETHEREUM_SECRET_KEY}  # GET FROM ENV
    ports:
      - "8080:8080"

  postgre-db:
    image: postgres:17
    container_name: postgre-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mpcwallet
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  goose:
    image: golang:1.23-alpine
    volumes:
      - ./internal/infrastructure/db/migrations:/migrations 
    command: >
      sh -c "
        go install github.com/pressly/goose/v3/cmd/goose@latest && 
        goose -dir /migrations postgres 'postgres://user:password@postgre-db:5432/mpcwallet?sslmode=disable' up"
    depends_on:
      - postgre-db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--list",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 10s
      timeout: 10s
      retries: 20

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password
      - REDIS_PORT=6379
      - REDIS_DATABASES=1

volumes:
  postgres-data:
